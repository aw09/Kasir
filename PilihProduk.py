#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.3
#  in conjunction with Tcl version 8.6
#    May 28, 2020 02:28:15 PM +07  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import PilihProduk_support

listProduk = None
def add_product(tid, user):
    global listProduk, t_id, client
    t_id = tid
    client = user
    listProduk = PilihProduk_support.getProduk()
    vp_start_gui()
    

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    PilihProduk_support.set_Tk_var()
    top = Toplevel1 (root)
    PilihProduk_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    PilihProduk_support.set_Tk_var()
    top = Toplevel1 (w)
    PilihProduk_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("360x479+337+145")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.25, rely=0.125, height=21, width=83)
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(text='''PILIH PRODUK''')

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.25, rely=0.292, height=21, width=94)
        self.Label2.configure(background="#d9d9d9")
        self.Label2.configure(disabledforeground="#a3a3a3")
        self.Label2.configure(foreground="#000000")
        self.Label2.configure(text='''HARGA SATUAN''')

        self.satuan = tk.Label(top)
        self.satuan.place(relx=0.25, rely=0.355, height=31, width=184)
        self.satuan.configure(background="#d9d9d9")
        self.satuan.configure(disabledforeground="#a3a3a3")
        self.satuan.configure(foreground="#000000")
        self.satuan.configure(justify='right')
        self.satuan.configure(text='''0''')

        self.Label4 = tk.Label(top)
        self.Label4.place(relx=0.25, rely=0.459, height=21, width=54)
        self.Label4.configure(background="#d9d9d9")
        self.Label4.configure(cursor="fleur")
        self.Label4.configure(disabledforeground="#a3a3a3")
        self.Label4.configure(foreground="#000000")
        self.Label4.configure(text='''JUMLAH''')

        sv = tk.StringVar()
        sv.trace("w", lambda name, index, mode, sv=sv: self.callback())
        self.jumlah = tk.Entry(top, textvariable=sv)
        self.jumlah.place(relx=0.278, rely=0.522,height=20, relwidth=0.456)
        self.jumlah.configure(background="white")
        self.jumlah.configure(disabledforeground="#a3a3a3")
        self.jumlah.configure(font="TkFixedFont")
        self.jumlah.configure(foreground="#000000")
        self.jumlah.configure(insertbackground="black")

        self.Label5 = tk.Label(top)
        self.Label5.place(relx=0.25, rely=0.605, height=21, width=64)
        self.Label5.configure(background="#d9d9d9")
        self.Label5.configure(cursor="fleur")
        self.Label5.configure(disabledforeground="#a3a3a3")
        self.Label5.configure(foreground="#000000")
        self.Label5.configure(text='''SUBTOTAL''')

        self.subtotal = tk.Label(top)
        self.subtotal.place(relx=0.278, rely=0.668, height=21, width=164)
        self.subtotal.configure(background="#d9d9d9")
        self.subtotal.configure(disabledforeground="#a3a3a3")
        self.subtotal.configure(foreground="#000000")
        self.subtotal.configure(text='''0''')

        self.produk = ttk.Combobox(top)
        self.produk.place(relx=0.25, rely=0.188, relheight=0.044, relwidth=0.508)
        self.produk['value'] = listProduk.nama.values.tolist()
        self.produk.configure(textvariable=PilihProduk_support.combobox)
        self.produk.configure(takefocus="")
        self.produk.bind('<<ComboboxSelected>>', lambda e: self.handler(self.produk.current(), self.satuan))

        self.tambah = tk.Button(top)
        self.tambah.place(relx=0.25, rely=0.772, height=24, width=187)
        self.tambah.configure(activebackground="#ececec")
        self.tambah.configure(activeforeground="#000000")
        self.tambah.configure(background="#d9d9d9")
        self.tambah.configure(disabledforeground="#a3a3a3")
        self.tambah.configure(foreground="#000000")
        self.tambah.configure(highlightbackground="#d9d9d9")
        self.tambah.configure(highlightcolor="black")
        self.tambah.configure(pady="0")
        self.tambah.configure(text='''Tambah''')
        self.tambah.configure(command=lambda : PilihProduk_support.add(
            t_id,
            client,
            listProduk.nama.values.tolist()[self.produk.current()], 
            self.subtotal['text']))

        self.batal = tk.Button(top)
        self.batal.place(relx=0.25, rely=0.877, height=24, width=187)
        self.batal.configure(activebackground="#ececec")
        self.batal.configure(activeforeground="#000000")
        self.batal.configure(background="#d9d9d9")
        self.batal.configure(cursor="fleur")
        self.batal.configure(disabledforeground="#a3a3a3")
        self.batal.configure(foreground="#000000")
        self.batal.configure(highlightbackground="#d9d9d9")
        self.batal.configure(highlightcolor="black")
        self.batal.configure(pady="0")
        self.batal.configure(text='''Batal''')
    
    def handler(event, produk, satuan):
        if produk != -1:
            harga = listProduk.harga.values.tolist()
            satuan.configure(text=harga[produk])
    def callback(sv):
        jumlah = sv.jumlah.get()
        if jumlah != '':
            jumlah = int(jumlah)
        total = jumlah*int(sv.satuan['text'])
        sv.subtotal.configure(text=total)

if __name__ == '__main__':
    vp_start_gui()





