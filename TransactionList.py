#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.3
#  in conjunction with Tcl version 8.6
#    May 27, 2020 06:13:20 PM +07  platform: Windows NT

import sys
import pandas as pd

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import BaseView
import TransactionModel
import CartModel
import Login


def start(*args):
    global user, transaction, total
    transaction = TransactionModel.getAll()
    total = CartModel.getTotal()
    user = args[0]
    vp_start_gui()

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = List_Transaksi (root)
    BaseView.init(root, top)
    root.mainloop()
    

w = None
def create_List_Transaksi(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_List_Transaksi(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = List_Transaksi (w)
    BaseView.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_List_Transaksi():
    global w
    w.destroy()
    w = None

class List_Transaksi:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("720x491+-1+105")
        top.minsize(120, 1)
        top.maxsize(1370, 749)
        top.resizable(1, 1)
        top.title("List Transaksi")
        top.configure(background="#d9d9d9")

        self.newTransaction = tk.Button(top)
        self.newTransaction.place(relx=0.025, rely=0.027, height=24, width=87)
        self.newTransaction.configure(activebackground="#ececec")
        self.newTransaction.configure(activeforeground="#000000")
        self.newTransaction.configure(background="#d9d9d9")
        self.newTransaction.configure(command=lambda :BaseView.newTransaction())
        self.newTransaction.configure(disabledforeground="#a3a3a3")
        self.newTransaction.configure(foreground="#000000")
        self.newTransaction.configure(highlightbackground="#d9d9d9")
        self.newTransaction.configure(highlightcolor="black")
        self.newTransaction.configure(pady="0")
        self.newTransaction.configure(text='''Transaksi Baru''')

        self.logout = tk.Button(top)
        self.logout.place(relx=0.85, rely=0.027, height=24, width=44)
        self.logout.configure(activebackground="#ececec")
        self.logout.configure(activeforeground="#000000")
        self.logout.configure(background="#d9d9d9")
        self.logout.configure(disabledforeground="#a3a3a3")
        self.logout.configure(foreground="#000000")
        self.logout.configure(highlightbackground="#d9d9d9")
        self.logout.configure(highlightcolor="black")
        self.logout.configure(pady="0")
        self.logout.configure(text='''Keluar''')
        self.logout.configure(command=lambda :BaseView.redirect(Login))

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.012, rely=0.214, relheight=0.684, relwidth=0.94)

        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#d9d9d9")
        
        df = pd.read_csv('Transaction.csv')
        cols = ['No', 'Tanggal', 'Pelanggan', 'Total']
        
        self.tree = ttk.Treeview(self.Frame1)
        self.tree.pack()
        minwidth = self.tree.column('#0', option='minwidth')
        self.tree.column('#0', width=minwidth)
        self.tree["columns"] = cols
        for i in cols:
            self.tree.heading(i, text=i.capitalize(), anchor='w')
        self.tree.column('No', width=25)
        self.tree.column('Tanggal', width=120)
        self.tree.column('Pelanggan', width=60)
        self.tree.column('Total', width=100)
        
        for i in transaction:
            index = len(transaction) - transaction.index(i)
            values = [index, i.date, i.account.username.upper(), total]
            self.tree.insert("",0,text=index,values=values)



